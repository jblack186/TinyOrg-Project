{"ast":null,"code":"var _jsxFileName = \"/Users/jamie/Documents/Tiny Organics Project/TinyOrganic-Deploy/to-project/project/frontend/src/components/RecipeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/RecipeList.scss\";\nimport axios from \"axios\";\nimport svgBaby from \"../img/baby-boy.svg\";\nimport Danger from \"../img/danger.svg\";\nimport Ribbon from \"../img/ribbon-for-an-angle.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeList = props => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [allergies, setAllergies] = useState(props.allergies);\n  const [loading, setLoading] = useState(true);\n  console.log('rop', props.recipes);\n\n  function checkAllergy(allRecipes) {\n    const safeRecipes = allRecipes.filter(recipe => !recipe.allergens.find(allergy => allergies.includes(allergy)));\n    return safeRecipes;\n  }\n\n  useEffect(() => {\n    axios.get('/api/recipes-list/').then(res => {\n      let safeRecipes = checkAllergy(props.recipes);\n      console.log('safe', safeRecipes);\n      setRecipes(safeRecipes);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [props]);\n  console.log('recipes', recipes);\n  console.log('allergies', allergies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list__box\",\n      children: recipes.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `list__box__allergies list__box__allergies--${item.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"list__box__allergies__img list__box__allergies__img--ribbon\",\n            src: Ribbon,\n            alt: \"ribbon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"list__box__allergies__img\",\n            src: svgBaby,\n            alt: \"baby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"list__box__allergies__heading\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list__box__allergies__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"list__box__allergies__img list__box__allergies__img--danger\",\n              src: Danger,\n              alt: \"danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 61\n            }, this), item.allergens.length > 0 ? item.allergens.map(allrgy => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: allrgy\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `list__box__allergies__button list__box__allergies__button--${item.id}`,\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeList, \"4xMvzgfUTo4CLfjBfPfqvaik42Y=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/jamie/Documents/Tiny Organics Project/TinyOrganic-Deploy/to-project/project/frontend/src/components/RecipeList.js"],"names":["React","useState","useEffect","axios","RecipeList","props","recipes","setRecipes","allergies","setAllergies","loading","setLoading","console","log","checkAllergy","allRecipes","safeRecipes","filter","recipe","allergens","find","allergy","includes","get","then","res","catch","err","map","item","id","Ribbon","svgBaby","name","Danger","length","allrgy"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/RecipeList.scss\";\nimport axios from \"axios\";\nimport svgBaby from '../img/baby-boy.svg';\nimport Danger from '../img/danger.svg';\nimport Ribbon from '../img/ribbon-for-an-angle.svg';\n\nconst RecipeList = (props) => {\n  const [recipes, setRecipes] = useState([]);\n  const [allergies, setAllergies] = useState(props.allergies);\n  const [loading, setLoading] = useState(true)\n\n\n  \n  console.log('rop', props.recipes)\n  function checkAllergy(allRecipes) {\n    const safeRecipes = allRecipes.filter(recipe => !recipe.allergens.find(allergy => allergies.includes(allergy) ));\nreturn safeRecipes\n}\n\n\n  useEffect(() => {\n    axios.get('/api/recipes-list/')\n  .then(res => {\n    let safeRecipes = checkAllergy(props.recipes)\n    console.log('safe', safeRecipes)\n   setRecipes(safeRecipes)\n   \n  })\n  .catch(err => {\n    console.log(err)\n  })\n  }, [props])\n  console.log('recipes',recipes)\n  console.log('allergies', allergies)\n\n\n  return (\n    <div className=\"list\">\n      <div className=\"list__box\">\n      {recipes.map(item => {\n        return <div className={`list__box__allergies list__box__allergies--${item.id}`}>\n              <img className=\"list__box__allergies__img list__box__allergies__img--ribbon\" src={Ribbon} alt=\"ribbon\" />\n              <img className=\"list__box__allergies__img\" src={svgBaby} alt=\"baby\" />\n              <h3 className=\"list__box__allergies__heading\" >{item.name}</h3>\n               <div className=\"list__box__allergies__body\" ><img className=\"list__box__allergies__img list__box__allergies__img--danger\" src={Danger} alt=\"danger\" />\n{ item.allergens.length > 0 ? item.allergens.map(allrgy => {\n                 return <p>{allrgy}</p>\n               }) : <p>none</p>}</div>\n<button className={`list__box__allergies__button list__box__allergies__button--${item.id}`} >Learn More</button>\n               </div>\n               \n      })}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeList;\n"]},"metadata":{},"sourceType":"module"}